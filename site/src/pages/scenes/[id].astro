---
import Layout from "../../layouts/Layout.astro";
import { loadAllScenes, loadAllCharacters, loadWorld } from "../../utils/yaml-loader.js";
import { generateSceneNarrative } from "../../utils/narrative-generator.js";

export function getStaticPaths() {
    const scenes = loadAllScenes();
    return scenes.map((scene) => ({
        params: { id: scene.id },
        props: { scene },
    }));
}

const { scene } = Astro.props;

// Safety check for scene data
if (!scene) {
    return Astro.redirect("/scenes");
}

const characters = loadAllCharacters();
const world = loadWorld();

// Generate narrative with error handling
let narrative = "Unable to generate narrative for this scene.";
try {
    narrative = generateSceneNarrative(scene, characters, world);
} catch (error) {
    console.error("Error generating narrative:", error);
    narrative = `## Error Generating Narrative\n\nThere was an error generating the narrative for this scene: ${error.message}`;
}
---

<Layout title={scene.title || "Unknown Scene"}>
    <h1>{scene.title || "Unknown Scene"}</h1>
    <p class="meta">
        Episode {scene.episode || "Unknown"} | {scene.location || "Unknown Location"}
    </p>

    <section>
        <h2>Synopsis</h2>
        <p>{scene.synopsis || "No synopsis available."}</p>
    </section>

    <section>
        <h2>Characters</h2>
        {
            scene.characters && scene.characters.length > 0 ? (
                <ul>
                    {scene.characters.map((charId) => {
                        const char = characters.find((c) => c.id === charId);
                        return (
                            <li>
                                <a href={`/characters/${charId}`}>
                                    {char?.name || charId}
                                </a>
                            </li>
                        );
                    })}
                </ul>
            ) : (
                <p>No characters listed for this scene.</p>
            )
        }
    </section>

    <section>
        <h2>Generated Narrative</h2>
        <div class="narrative" set:html={narrative} />
    </section>

    <section>
        <h2>Themes</h2>
        {
            scene.themes && scene.themes.length > 0 ? (
                <ul>
                    {scene.themes.map((theme) => (
                        <li>{theme}</li>
                    ))}
                </ul>
            ) : (
                <p>No themes listed for this scene.</p>
            )
        }
    </section>

    <style>
        .meta {
            color: #666;
            font-style: italic;
        }
        .narrative {
            background: #f5f5f5;
            padding: 20px;
            border-radius: 8px;
            white-space: pre-wrap;
        }
    </style>
</Layout>
